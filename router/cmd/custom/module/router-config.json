{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Query",
            "fieldNames": [
              "employee",
              "employees",
              "team_mates"
            ]
          },
          {
            "typeName": "Employee",
            "fieldNames": [
              "details",
              "id",
              "role"
            ]
          }
        ],
        "childNodes": [
          {
            "typeName": "RoleType",
            "fieldNames": [
              "department",
              "title"
            ]
          },
          {
            "typeName": "Identifiable",
            "fieldNames": [
              "id"
            ]
          },
          {
            "typeName": "Engineer",
            "fieldNames": [
              "department",
              "engineerType",
              "title"
            ]
          },
          {
            "typeName": "Marketer",
            "fieldNames": [
              "department",
              "title"
            ]
          },
          {
            "typeName": "Operator",
            "fieldNames": [
              "department",
              "operatorType",
              "title"
            ]
          },
          {
            "typeName": "Details",
            "fieldNames": [
              "forename",
              "location",
              "surname"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "http://localhost:4001/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "http://localhost:4001/graphql"
            }
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Query {\n  employee(id: Int!): Employee\n  employees: [Employee!]!\n  team_mates(team: Department!): [Employee!]!\n}\n\nenum Department {\n  ENGINEERING\n  MARKETING\n  OPERATIONS\n}\n\ninterface RoleType {\n  department: Department!\n  title: [String!]!\n}\n\nenum EngineerType {\n  FRONTEND\n  BACKEND\n  FULLSTACK\n}\n\ninterface Identifiable {\n  id: Int!\n}\n\ntype Engineer implements RoleType {\n  department: Department!\n  engineerType: EngineerType!\n  title: [String!]!\n}\n\ntype Marketer implements RoleType{\n  department: Department!\n  title: [String!]!\n}\n\nenum OperationType {\n  FINANCE\n  HUMAN_RESOURCES\n}\n\ntype Operator implements RoleType {\n  department: Department!\n  operatorType: [OperationType!]!\n  title: [String!]!\n}\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  INDIA\n  NETHERLANDS\n  PORTUGAL\n  SPAIN\n  UKRAINE\n}\n\ntype Details @shareable {\n  forename: String!\n  location: Country!\n  surname: String!\n}\n\ntype Employee implements Identifiable @key(fields: \"id\") {\n  details: Details! @shareable\n  id: Int!\n  role: RoleType!\n}"
          },
          "upstreamSchema": {
            "key": "74081af1e7ac3905b5088c45045d5400c78f3a04"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "http://localhost:4001/graphql",
        "keys": [
          {
            "typeName": "Employee",
            "selectionSet": "id"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Employee",
            "fieldNames": [
              "details",
              "id"
            ]
          }
        ],
        "childNodes": [
          {
            "typeName": "Animal",
            "fieldNames": [
              "class",
              "gender"
            ]
          },
          {
            "typeName": "Pet",
            "fieldNames": [
              "class",
              "gender",
              "name"
            ]
          },
          {
            "typeName": "Alligator",
            "fieldNames": [
              "class",
              "dangerous",
              "gender",
              "name"
            ]
          },
          {
            "typeName": "Cat",
            "fieldNames": [
              "class",
              "gender",
              "name",
              "type"
            ]
          },
          {
            "typeName": "Dog",
            "fieldNames": [
              "breed",
              "class",
              "gender",
              "name"
            ]
          },
          {
            "typeName": "Mouse",
            "fieldNames": [
              "class",
              "gender",
              "name"
            ]
          },
          {
            "typeName": "Pony",
            "fieldNames": [
              "class",
              "gender",
              "name"
            ]
          },
          {
            "typeName": "Details",
            "fieldNames": [
              "forename",
              "surname",
              "hasChildren",
              "maritalStatus",
              "nationality",
              "pets"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "http://localhost:4002/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "http://localhost:4002/graphql"
            }
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "enum Class {\n  Fish\n  Mammal\n  Reptile\n}\n\nenum Gender {\n  FEMALE\n  MALE\n  UNKNOWN\n}\n\ninterface Animal {\n  class: Class!\n  gender: Gender!\n}\n\ninterface Pet implements Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nenum CatType {\n  HOME\n  STREET\n}\n\ntype Alligator implements Pet & Animal {\n  class: Class!\n  dangerous: String!\n  gender: Gender!\n  name: String!\n}\n\ntype Cat implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n  type: CatType!\n}\n\nenum DogBreed {\n  GOLDEN_RETRIEVER\n  POODLE\n  ROTTWEILER\n  YORKSHIRE_TERRIER\n}\n\ntype Dog implements Pet & Animal {\n  breed: DogBreed!\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Mouse implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Pony implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nenum MaritalStatus {\n  ENGAGED\n  MARRIED\n}\n\nenum Nationality {\n  AMERICAN\n  DUTCH\n  ENGLISH\n  GERMAN\n  INDIAN\n  SPANISH\n  UKRAINIAN\n}\n\ntype Details  {\n  forename: String! @shareable\n  surname: String! @shareable\n  hasChildren: Boolean!\n  maritalStatus: MaritalStatus\n  nationality: Nationality!\n  pets: [Pet]\n}\n\ntype Employee @key(fields: \"id\") {\n  details: Details @shareable\n  id: Int!\n}"
          },
          "upstreamSchema": {
            "key": "71dc7cd932d5d8d171614fb6c1f5ee4c22a42729"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "http://localhost:4002/graphql",
        "keys": [
          {
            "typeName": "Employee",
            "selectionSet": "id"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Employee",
            "fieldNames": [
              "id",
              "hobbies"
            ]
          }
        ],
        "childNodes": [
          {
            "typeName": "Exercise",
            "fieldNames": [
              "category"
            ]
          },
          {
            "typeName": "Experience",
            "fieldNames": [
              "yearsOfExperience"
            ]
          },
          {
            "typeName": "Flying",
            "fieldNames": [
              "planeModels",
              "yearsOfExperience"
            ]
          },
          {
            "typeName": "Gaming",
            "fieldNames": [
              "genres",
              "name",
              "yearsOfExperience"
            ]
          },
          {
            "typeName": "Other",
            "fieldNames": [
              "name"
            ]
          },
          {
            "typeName": "Programming",
            "fieldNames": [
              "languages"
            ]
          },
          {
            "typeName": "Travelling",
            "fieldNames": [
              "countriesLived"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "http://localhost:4003/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "http://localhost:4003/graphql"
            }
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "enum ExerciseType {\n  CALISTHENICS\n  HIKING\n  SPORT\n  STRENGTH_TRAINING\n}\n\ntype Exercise {\n  category: ExerciseType!\n}\n\ninterface Experience {\n  yearsOfExperience: Float!\n}\n\ntype Flying implements Experience {\n  planeModels: [String!]!\n  yearsOfExperience: Float!\n}\n\nenum GameGenre {\n  ADVENTURE\n  BOARD\n  FPS\n  CARD\n  RPG\n  ROGUELITE\n  SIMULATION\n  STRATEGY\n}\n\ntype Gaming implements Experience {\n  genres: [GameGenre!]!\n  name: String!\n  yearsOfExperience: Float!\n}\n\ntype Other {\n  name: String!\n}\n\nenum ProgrammingLanguage {\n  CSHARP\n  GO\n  RUST\n  TYPESCRIPT\n}\n\ntype Programming {\n  languages: [ProgrammingLanguage!]!\n}\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  KOREA\n  NETHERLANDS\n  INDONESIA\n  PORTUGAL\n  SERBIA\n  SPAIN\n  TAIWAN\n  THAILAND\n}\n\ntype Travelling {\n  countriesLived: [Country!]!\n}\n\nunion Hobby = Exercise | Flying | Gaming | Programming | Travelling | Other\n\ntype Employee @key(fields: \"id\") {\n  id: Int!\n  hobbies: [Hobby!]!\n}"
          },
          "upstreamSchema": {
            "key": "b61384214144ae458aa553bcc578091845cc938e"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "http://localhost:4003/graphql",
        "keys": [
          {
            "typeName": "Employee",
            "selectionSet": "id"
          }
        ]
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          {
            "typeName": "Employee",
            "fieldNames": [
              "id",
              "products"
            ]
          }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": {
            "url": {
              "staticVariableContent": "http://localhost:4004/graphql"
            },
            "method": "POST",
            "body": {},
            "baseUrl": {},
            "path": {}
          },
          "subscription": {
            "enabled": true,
            "url": {
              "staticVariableContent": "http://localhost:4004/graphql"
            }
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "enum ProductNames {\n  CLOUD\n  COSMO\n  ENGINE\n  FINANCE\n  HUMAN_RESOURCES\n  MARKETING\n  SDK\n}\n\ntype Employee @key(fields: \"id\") {\n  id: Int!\n  products: [ProductNames!]!\n}"
          },
          "upstreamSchema": {
            "key": "c0c2ee611326822af2fecd967f8215401611663f"
          }
        },
        "requestTimeoutSeconds": "10",
        "id": "http://localhost:4004/graphql",
        "keys": [
          {
            "typeName": "Employee",
            "selectionSet": "id"
          }
        ]
      }
    ],
    "fieldConfigurations": [
      {
        "typeName": "Query",
        "fieldName": "employee",
        "argumentsConfiguration": [
          {
            "name": "id",
            "sourceType": "FIELD_ARGUMENT"
          }
        ]
      },
      {
        "typeName": "Query",
        "fieldName": "team_mates",
        "argumentsConfiguration": [
          {
            "name": "team",
            "sourceType": "FIELD_ARGUMENT"
          }
        ]
      }
    ],
    "graphqlSchema": "directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ninterface RoleType {\n  department: Department!\n  title: [String!]!\n}\n\ninterface Identifiable {\n  id: Int!\n}\n\ninterface Animal {\n  class: Class!\n  gender: Gender!\n}\n\ninterface Experience {\n  yearsOfExperience: Float!\n}\n\nunion Hobby = Exercise | Flying | Gaming | Programming | Travelling | Other\n\ntype Query {\n  employee(id: Int!): Employee\n  employees: [Employee!]!\n  team_mates(team: Department!): [Employee!]!\n}\n\nenum Department {\n  ENGINEERING\n  MARKETING\n  OPERATIONS\n}\n\nenum EngineerType {\n  FRONTEND\n  BACKEND\n  FULLSTACK\n}\n\nenum OperationType {\n  FINANCE\n  HUMAN_RESOURCES\n}\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  INDIA\n  NETHERLANDS\n  PORTUGAL\n  SPAIN\n  UKRAINE\n  KOREA\n  INDONESIA\n  SERBIA\n  TAIWAN\n  THAILAND\n}\n\ntype Details {\n  forename: String!\n  location: Country!\n  surname: String!\n  hasChildren: Boolean!\n  maritalStatus: MaritalStatus\n  nationality: Nationality!\n  pets: [Pet]\n}\n\nenum Class {\n  Fish\n  Mammal\n  Reptile\n}\n\nenum Gender {\n  FEMALE\n  MALE\n  UNKNOWN\n}\n\nenum CatType {\n  HOME\n  STREET\n}\n\nenum DogBreed {\n  GOLDEN_RETRIEVER\n  POODLE\n  ROTTWEILER\n  YORKSHIRE_TERRIER\n}\n\nenum MaritalStatus {\n  ENGAGED\n  MARRIED\n}\n\nenum Nationality {\n  AMERICAN\n  DUTCH\n  ENGLISH\n  GERMAN\n  INDIAN\n  SPANISH\n  UKRAINIAN\n}\n\nenum ExerciseType {\n  CALISTHENICS\n  HIKING\n  SPORT\n  STRENGTH_TRAINING\n}\n\ntype Exercise {\n  category: ExerciseType!\n}\n\nenum GameGenre {\n  ADVENTURE\n  BOARD\n  FPS\n  CARD\n  RPG\n  ROGUELITE\n  SIMULATION\n  STRATEGY\n}\n\ntype Other {\n  name: String!\n}\n\nenum ProgrammingLanguage {\n  CSHARP\n  GO\n  RUST\n  TYPESCRIPT\n}\n\ntype Programming {\n  languages: [ProgrammingLanguage!]!\n}\n\ntype Travelling {\n  countriesLived: [Country!]!\n}\n\nenum ProductNames {\n  CLOUD\n  COSMO\n  ENGINE\n  FINANCE\n  HUMAN_RESOURCES\n  MARKETING\n  SDK\n}\n\ninterface Pet implements Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Engineer implements RoleType {\n  department: Department!\n  engineerType: EngineerType!\n  title: [String!]!\n}\n\ntype Marketer implements RoleType {\n  department: Department!\n  title: [String!]!\n}\n\ntype Operator implements RoleType {\n  department: Department!\n  operatorType: [OperationType!]!\n  title: [String!]!\n}\n\ntype Employee implements Identifiable {\n  details: Details\n  id: Int!\n  role: RoleType!\n  hobbies: [Hobby!]!\n  products: [ProductNames!]!\n}\n\ntype Alligator implements Pet & Animal {\n  class: Class!\n  dangerous: String!\n  gender: Gender!\n  name: String!\n}\n\ntype Cat implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n  type: CatType!\n}\n\ntype Dog implements Pet & Animal {\n  breed: DogBreed!\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Mouse implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Pony implements Pet & Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Flying implements Experience {\n  planeModels: [String!]!\n  yearsOfExperience: Float!\n}\n\ntype Gaming implements Experience {\n  genres: [GameGenre!]!\n  name: String!\n  yearsOfExperience: Float!\n}",
    "stringStorage": {
      "74081af1e7ac3905b5088c45045d5400c78f3a04": "schema {\n  query: Query\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @key(fields: String!) repeatable on OBJECT\n\ndirective @provides(fields: String!) on FIELD_DEFINITION\n\ndirective @requires(fields: String!) on FIELD_DEFINITION\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  INDIA\n  NETHERLANDS\n  PORTUGAL\n  SPAIN\n  UKRAINE\n}\n\nenum Department {\n  ENGINEERING\n  MARKETING\n  OPERATIONS\n}\n\ntype Details @shareable {\n  forename: String!\n  location: Country!\n  surname: String!\n}\n\ntype Employee implements Identifiable @key(fields: \"id\") {\n  details: Details! @shareable\n  id: Int!\n  role: RoleType!\n}\n\ntype Engineer implements RoleType {\n  department: Department!\n  engineerType: EngineerType!\n  title: [String!]!\n}\n\nenum EngineerType {\n  BACKEND\n  FRONTEND\n  FULLSTACK\n}\n\ninterface Identifiable {\n  id: Int!\n}\n\ntype Marketer implements RoleType {\n  department: Department!\n  title: [String!]!\n}\n\nenum OperationType {\n  FINANCE\n  HUMAN_RESOURCES\n}\n\ntype Operator implements RoleType {\n  department: Department!\n  operatorType: [OperationType!]!\n  title: [String!]!\n}\n\ntype Query {\n  employee(id: Int!): Employee\n  employees: [Employee!]!\n  team_mates(team: Department!): [Employee!]!\n}\n\ninterface RoleType {\n  department: Department!\n  title: [String!]!\n}",
      "71dc7cd932d5d8d171614fb6c1f5ee4c22a42729": "directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @key(fields: String!) repeatable on OBJECT\n\ndirective @provides(fields: String!) on FIELD_DEFINITION\n\ndirective @requires(fields: String!) on FIELD_DEFINITION\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Alligator implements Animal & Pet {\n  class: Class!\n  dangerous: String!\n  gender: Gender!\n  name: String!\n}\n\ninterface Animal {\n  class: Class!\n  gender: Gender!\n}\n\ntype Cat implements Animal & Pet {\n  class: Class!\n  gender: Gender!\n  name: String!\n  type: CatType!\n}\n\nenum CatType {\n  HOME\n  STREET\n}\n\nenum Class {\n  Fish\n  Mammal\n  Reptile\n}\n\ntype Details {\n  forename: String! @shareable\n  hasChildren: Boolean!\n  maritalStatus: MaritalStatus\n  nationality: Nationality!\n  pets: [Pet]\n  surname: String! @shareable\n}\n\ntype Dog implements Animal & Pet {\n  breed: DogBreed!\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nenum DogBreed {\n  GOLDEN_RETRIEVER\n  POODLE\n  ROTTWEILER\n  YORKSHIRE_TERRIER\n}\n\ntype Employee @key(fields: \"id\") {\n  details: Details @shareable\n  id: Int!\n}\n\nenum Gender {\n  FEMALE\n  MALE\n  UNKNOWN\n}\n\nenum MaritalStatus {\n  ENGAGED\n  MARRIED\n}\n\ntype Mouse implements Animal & Pet {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\nenum Nationality {\n  AMERICAN\n  DUTCH\n  ENGLISH\n  GERMAN\n  INDIAN\n  SPANISH\n  UKRAINIAN\n}\n\ninterface Pet implements Animal {\n  class: Class!\n  gender: Gender!\n  name: String!\n}\n\ntype Pony implements Animal & Pet {\n  class: Class!\n  gender: Gender!\n  name: String!\n}",
      "b61384214144ae458aa553bcc578091845cc938e": "directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: String!) repeatable on OBJECT\n\ndirective @provides(fields: String!) on FIELD_DEFINITION\n\ndirective @requires(fields: String!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nenum Country {\n  AMERICA\n  ENGLAND\n  GERMANY\n  INDONESIA\n  KOREA\n  NETHERLANDS\n  PORTUGAL\n  SERBIA\n  SPAIN\n  TAIWAN\n  THAILAND\n}\n\ntype Employee @key(fields: \"id\") {\n  hobbies: [Hobby!]!\n  id: Int!\n}\n\ntype Exercise {\n  category: ExerciseType!\n}\n\nenum ExerciseType {\n  CALISTHENICS\n  HIKING\n  SPORT\n  STRENGTH_TRAINING\n}\n\ninterface Experience {\n  yearsOfExperience: Float!\n}\n\ntype Flying implements Experience {\n  planeModels: [String!]!\n  yearsOfExperience: Float!\n}\n\nenum GameGenre {\n  ADVENTURE\n  BOARD\n  CARD\n  FPS\n  ROGUELITE\n  RPG\n  SIMULATION\n  STRATEGY\n}\n\ntype Gaming implements Experience {\n  genres: [GameGenre!]!\n  name: String!\n  yearsOfExperience: Float!\n}\n\nunion Hobby = Exercise | Flying | Gaming | Other | Programming | Travelling\n\ntype Other {\n  name: String!\n}\n\ntype Programming {\n  languages: [ProgrammingLanguage!]!\n}\n\nenum ProgrammingLanguage {\n  CSHARP\n  GO\n  RUST\n  TYPESCRIPT\n}\n\ntype Travelling {\n  countriesLived: [Country!]!\n}",
      "c0c2ee611326822af2fecd967f8215401611663f": "directive @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: String!) repeatable on OBJECT\n\ndirective @provides(fields: String!) on FIELD_DEFINITION\n\ndirective @requires(fields: String!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Employee @key(fields: \"id\") {\n  id: Int!\n  products: [ProductNames!]!\n}\n\nenum ProductNames {\n  CLOUD\n  COSMO\n  ENGINE\n  FINANCE\n  HUMAN_RESOURCES\n  MARKETING\n  SDK\n}"
    }
  }
}