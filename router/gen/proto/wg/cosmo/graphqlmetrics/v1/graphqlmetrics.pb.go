// https://protobuf.dev/programming-guides/style/

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: wg/cosmo/graphqlmetrics/v1/graphqlmetrics.proto

package graphqlmetricsv1

import (
	_ "github.com/wundergraph/cosmo/router/gen/proto/wg/cosmo/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GraphQLRequestMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Document         string             `protobuf:"bytes,1,opt,name=Document,proto3" json:"Document,omitempty"`
	TypeFieldMetrics []*TypeFieldMetric `protobuf:"bytes,2,rep,name=TypeFieldMetrics,proto3" json:"TypeFieldMetrics,omitempty"`
	RequestInfo      *RequestInfo       `protobuf:"bytes,3,opt,name=RequestInfo,proto3" json:"RequestInfo,omitempty"`
}

func (x *GraphQLRequestMetrics) Reset() {
	*x = GraphQLRequestMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphQLRequestMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphQLRequestMetrics) ProtoMessage() {}

func (x *GraphQLRequestMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphQLRequestMetrics.ProtoReflect.Descriptor instead.
func (*GraphQLRequestMetrics) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{0}
}

func (x *GraphQLRequestMetrics) GetDocument() string {
	if x != nil {
		return x.Document
	}
	return ""
}

func (x *GraphQLRequestMetrics) GetTypeFieldMetrics() []*TypeFieldMetric {
	if x != nil {
		return x.TypeFieldMetrics
	}
	return nil
}

func (x *GraphQLRequestMetrics) GetRequestInfo() *RequestInfo {
	if x != nil {
		return x.RequestInfo
	}
	return nil
}

type RequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestInfo) Reset() {
	*x = RequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInfo) ProtoMessage() {}

func (x *RequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInfo.ProtoReflect.Descriptor instead.
func (*RequestInfo) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{1}
}

type TypeFieldMetric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName            string           `protobuf:"bytes,1,opt,name=TypeName,proto3" json:"TypeName,omitempty"`
	FieldName           string           `protobuf:"bytes,2,opt,name=FieldName,proto3" json:"FieldName,omitempty"`
	IsAbstract          bool             `protobuf:"varint,3,opt,name=IsAbstract,proto3" json:"IsAbstract,omitempty"`
	SpecificTypeName    string           `protobuf:"bytes,4,opt,name=SpecificTypeName,proto3" json:"SpecificTypeName,omitempty"`
	IsList              bool             `protobuf:"varint,5,opt,name=IsList,proto3" json:"IsList,omitempty"`
	ReturnedObjectCount int32            `protobuf:"varint,6,opt,name=ReturnedObjectCount,proto3" json:"ReturnedObjectCount,omitempty"`
	Source              *TypeFieldSource `protobuf:"bytes,7,opt,name=Source,proto3" json:"Source,omitempty"`
}

func (x *TypeFieldMetric) Reset() {
	*x = TypeFieldMetric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeFieldMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeFieldMetric) ProtoMessage() {}

func (x *TypeFieldMetric) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeFieldMetric.ProtoReflect.Descriptor instead.
func (*TypeFieldMetric) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{2}
}

func (x *TypeFieldMetric) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *TypeFieldMetric) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *TypeFieldMetric) GetIsAbstract() bool {
	if x != nil {
		return x.IsAbstract
	}
	return false
}

func (x *TypeFieldMetric) GetSpecificTypeName() string {
	if x != nil {
		return x.SpecificTypeName
	}
	return ""
}

func (x *TypeFieldMetric) GetIsList() bool {
	if x != nil {
		return x.IsList
	}
	return false
}

func (x *TypeFieldMetric) GetReturnedObjectCount() int32 {
	if x != nil {
		return x.ReturnedObjectCount
	}
	return 0
}

func (x *TypeFieldMetric) GetSource() *TypeFieldSource {
	if x != nil {
		return x.Source
	}
	return nil
}

type TypeFieldSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubgraphID string `protobuf:"bytes,1,opt,name=SubgraphID,proto3" json:"SubgraphID,omitempty"`
}

func (x *TypeFieldSource) Reset() {
	*x = TypeFieldSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeFieldSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeFieldSource) ProtoMessage() {}

func (x *TypeFieldSource) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeFieldSource.ProtoReflect.Descriptor instead.
func (*TypeFieldSource) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{3}
}

func (x *TypeFieldSource) GetSubgraphID() string {
	if x != nil {
		return x.SubgraphID
	}
	return ""
}

type PublishGraphQLRequestMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*GraphQLRequestMetrics `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *PublishGraphQLRequestMetricsRequest) Reset() {
	*x = PublishGraphQLRequestMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishGraphQLRequestMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishGraphQLRequestMetricsRequest) ProtoMessage() {}

func (x *PublishGraphQLRequestMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishGraphQLRequestMetricsRequest.ProtoReflect.Descriptor instead.
func (*PublishGraphQLRequestMetricsRequest) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{4}
}

func (x *PublishGraphQLRequestMetricsRequest) GetMetrics() []*GraphQLRequestMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type PublishOperationCoverageReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublishOperationCoverageReportResponse) Reset() {
	*x = PublishOperationCoverageReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishOperationCoverageReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishOperationCoverageReportResponse) ProtoMessage() {}

func (x *PublishOperationCoverageReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishOperationCoverageReportResponse.ProtoReflect.Descriptor instead.
func (*PublishOperationCoverageReportResponse) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{5}
}

// SingleFetch makes a single request for one single object
type SingleFetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SingleFetch) Reset() {
	*x = SingleFetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleFetch) ProtoMessage() {}

func (x *SingleFetch) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleFetch.ProtoReflect.Descriptor instead.
func (*SingleFetch) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{6}
}

// ParallelFetch makes multiple requests in parallel for one single object
type ParallelFetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ParallelFetch) Reset() {
	*x = ParallelFetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParallelFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParallelFetch) ProtoMessage() {}

func (x *ParallelFetch) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParallelFetch.ProtoReflect.Descriptor instead.
func (*ParallelFetch) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{7}
}

// BatchFetch makes a single batch request for multiple objects
// It is expected to be used only within a list or lists of lists
type BatchFetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BatchFetch) Reset() {
	*x = BatchFetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchFetch) ProtoMessage() {}

func (x *BatchFetch) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchFetch.ProtoReflect.Descriptor instead.
func (*BatchFetch) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{8}
}

// SerialFetch makes multiple requests in series for one single object
type SerialFetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SerialFetch) Reset() {
	*x = SerialFetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerialFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerialFetch) ProtoMessage() {}

func (x *SerialFetch) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerialFetch.ProtoReflect.Descriptor instead.
func (*SerialFetch) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{9}
}

// ParallelListItemFetch makes multiple requests in parallel, one for each item in a list
// It is expected to be used only within a list or lists of lists
// Use this over BatchFetch when the data source does not support batching
type ParallelListItemFetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ParallelListItemFetch) Reset() {
	*x = ParallelListItemFetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParallelListItemFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParallelListItemFetch) ProtoMessage() {}

func (x *ParallelListItemFetch) ProtoReflect() protoreflect.Message {
	mi := &file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParallelListItemFetch.ProtoReflect.Descriptor instead.
func (*ParallelListItemFetch) Descriptor() ([]byte, []int) {
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP(), []int{10}
}

var File_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto protoreflect.FileDescriptor

var file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x77, 0x67, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1a, 0x77, 0x67, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x2e, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x77,
	0x67, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x15,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x57, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x67,
	0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x10, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x49, 0x0a, 0x0b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x77, 0x67, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa6, 0x02, 0x0a, 0x0f, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x79, 0x70, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x49, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x49, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x67, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x31, 0x0a,
	0x0f, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x67, 0x72, 0x61, 0x70, 0x68, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x75, 0x62, 0x67, 0x72, 0x61, 0x70, 0x68, 0x49, 0x44,
	0x22, 0x72, 0x0a, 0x23, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x77, 0x67, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x22, 0x28, 0x0a, 0x26, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d,
	0x0a, 0x0b, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x46, 0x65, 0x74, 0x63, 0x68, 0x22, 0x0f, 0x0a,
	0x0d, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x22, 0x0c,
	0x0a, 0x0a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x46, 0x65, 0x74, 0x63, 0x68, 0x22, 0x0d, 0x0a, 0x0b,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x22, 0x17, 0x0a, 0x15, 0x50,
	0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x32, 0xb8, 0x01, 0x0a, 0x15, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51, 0x4c,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9e,
	0x01, 0x0a, 0x15, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x47, 0x72, 0x61, 0x70, 0x68, 0x51,
	0x4c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x3f, 0x2e, 0x77, 0x67, 0x2e, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x51, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x77, 0x67, 0x2e, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x9b, 0x02, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x77, 0x67, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x2e, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e,
	0x76, 0x31, 0x42, 0x13, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x67, 0x2f, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x57, 0x43, 0x47, 0xaa, 0x02, 0x1a, 0x57, 0x67, 0x2e,
	0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x1a, 0x57, 0x67, 0x5c, 0x43, 0x6f, 0x73,
	0x6d, 0x6f, 0x5c, 0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x26, 0x57, 0x67, 0x5c, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x5c,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1d,
	0x57, 0x67, 0x3a, 0x3a, 0x43, 0x6f, 0x73, 0x6d, 0x6f, 0x3a, 0x3a, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x71, 0x6c, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescOnce sync.Once
	file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescData = file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDesc
)

func file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescGZIP() []byte {
	file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescOnce.Do(func() {
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescData = protoimpl.X.CompressGZIP(file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescData)
	})
	return file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDescData
}

var file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_goTypes = []interface{}{
	(*GraphQLRequestMetrics)(nil),                  // 0: wg.cosmo.graphqlmetrics.v1.GraphQLRequestMetrics
	(*RequestInfo)(nil),                            // 1: wg.cosmo.graphqlmetrics.v1.RequestInfo
	(*TypeFieldMetric)(nil),                        // 2: wg.cosmo.graphqlmetrics.v1.TypeFieldMetric
	(*TypeFieldSource)(nil),                        // 3: wg.cosmo.graphqlmetrics.v1.TypeFieldSource
	(*PublishGraphQLRequestMetricsRequest)(nil),    // 4: wg.cosmo.graphqlmetrics.v1.PublishGraphQLRequestMetricsRequest
	(*PublishOperationCoverageReportResponse)(nil), // 5: wg.cosmo.graphqlmetrics.v1.PublishOperationCoverageReportResponse
	(*SingleFetch)(nil),                            // 6: wg.cosmo.graphqlmetrics.v1.SingleFetch
	(*ParallelFetch)(nil),                          // 7: wg.cosmo.graphqlmetrics.v1.ParallelFetch
	(*BatchFetch)(nil),                             // 8: wg.cosmo.graphqlmetrics.v1.BatchFetch
	(*SerialFetch)(nil),                            // 9: wg.cosmo.graphqlmetrics.v1.SerialFetch
	(*ParallelListItemFetch)(nil),                  // 10: wg.cosmo.graphqlmetrics.v1.ParallelListItemFetch
}
var file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_depIdxs = []int32{
	2, // 0: wg.cosmo.graphqlmetrics.v1.GraphQLRequestMetrics.TypeFieldMetrics:type_name -> wg.cosmo.graphqlmetrics.v1.TypeFieldMetric
	1, // 1: wg.cosmo.graphqlmetrics.v1.GraphQLRequestMetrics.RequestInfo:type_name -> wg.cosmo.graphqlmetrics.v1.RequestInfo
	3, // 2: wg.cosmo.graphqlmetrics.v1.TypeFieldMetric.Source:type_name -> wg.cosmo.graphqlmetrics.v1.TypeFieldSource
	0, // 3: wg.cosmo.graphqlmetrics.v1.PublishGraphQLRequestMetricsRequest.metrics:type_name -> wg.cosmo.graphqlmetrics.v1.GraphQLRequestMetrics
	4, // 4: wg.cosmo.graphqlmetrics.v1.GraphQLMetricsService.PublishGraphQLMetrics:input_type -> wg.cosmo.graphqlmetrics.v1.PublishGraphQLRequestMetricsRequest
	5, // 5: wg.cosmo.graphqlmetrics.v1.GraphQLMetricsService.PublishGraphQLMetrics:output_type -> wg.cosmo.graphqlmetrics.v1.PublishOperationCoverageReportResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_init() }
func file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_init() {
	if File_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphQLRequestMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeFieldMetric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeFieldSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishGraphQLRequestMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishOperationCoverageReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleFetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParallelFetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchFetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerialFetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParallelListItemFetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_goTypes,
		DependencyIndexes: file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_depIdxs,
		MessageInfos:      file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_msgTypes,
	}.Build()
	File_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto = out.File
	file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_rawDesc = nil
	file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_goTypes = nil
	file_wg_cosmo_graphqlmetrics_v1_graphqlmetrics_proto_depIdxs = nil
}
